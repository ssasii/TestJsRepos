What is DOCTYPE in HTML?

ðŸ‘‰ What are the new HTML5 features? 

ðŸ‘‰ What is Flexbox, Difference between flex and grid?

ðŸ‘‰ CSS Frameworks you have used?

ðŸ‘‰ What is Rest and Spread operator? show with example.

ðŸ‘‰ Difference between map and foreach? 

ðŸ‘‰ What is the slice and splice method in javascript? 

ðŸ‘‰ What is Hoisting, and how to avoid hoisting?

ðŸ‘‰ Have you worked with promises? what are promises?  

ðŸ‘‰ What is the difference between promises and async await? 

ðŸ‘‰ Difference between useMemo and React.memo? 

ðŸ‘‰ What do you understand by Virtual DOM? Explain its works.

ðŸ‘‰ Explain the lifecycle methods of React components?

ðŸ‘‰ What is prop drilling and how to avoid it, What is Context API?

//common elements from an array
let fiveBuy = [1, 2, 3, 4, 5, 6, 7, 8, 10, 41];
let fifteenBuy = [1, 4, 3, 0, 99, 10, 23];
let thirtyBuy = [3, 41, 1, 0, 10, 23];

const findCommon = (min, ...arrs) =>
  [...new Set(arrs.flat())].filter(
    (e) => arrs.reduce((acc, cur) => acc + cur.includes(e), 0) >= min
  );

// the first argument is the minimum arrays an element has to be appearing
console.log(findCommon(3, fiveBuy, fifteenBuy, thirtyBuy));


const findDuplicate = (str) => {
  let array = str.split('');
  const result = {};
  for (let i = 0; i < array.length; i++) {
    result[array[i]] = (result[array[i]] || 0) + 1;
  }
  return result;
};

console.log(findDuplicate('adsjfdsfsfjsdjfhacabcsbajda'));

const reverse = (string) => {
  return string
    .split(' ')
    .map((item) => {
      return item.split('').reverse().join('');
    })
    .join(' ');
};

console.log(reverse('I evol uoy os !hcum'));

const firstNonRepeatedCharacter = (string) => {
  return string
    .split('')
    .filter((character, index, obj) => {
      return obj.indexOf(character) === obj.lastIndexOf(character);
    })
    .shift();
};

console.log(firstNonRepeatedCharacter('aabcbd'));

//filter the dropdown lists => result = result.filter(function (user) {
      return user.toLowerCase().indexOf(value) !== -1;
    });
    
//convert the first letter into uppercase    
const toTitleCase = (phrase) => {
  return phrase
    .toLowerCase()
    .split(' ')
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};

let result = toTitleCase('maRy hAd a lIttLe LaMb');
console.log(result);    
